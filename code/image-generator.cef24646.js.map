{"version":3,"file":"image-generator.cef24646.js","sources":["../../src/script/utils/css/hidden.ts","../../src/script/components/app-file-input.ts","../../src/script/pages/image-generator.ts"],"sourcesContent":["import { css } from 'lit';\n\nexport const hidden = css`\n  .hidden {\n    display: none;\n    visibility: none;\n  }\n`;\n\nexport const hidden_sm = css`\n  @media screen and (max-width: 479px) {\n    .hidden-sm {\n      display: none;\n      visibility: none;\n    }\n  }\n`;\n\nexport const hidden_med = css`\n  @media screen and (min-width: 480px) and (max-width: 639px) {\n    .hidden-med {\n      display: none;\n      visibility: none;\n    }\n  }\n`;\n\nexport const hidden_lrg = css`\n  @media screen and (min-width: 640px) and (max-width: 1023px) {\n    .hidden-lrg {\n      display: none;\n      visibility: none;\n    }\n  }\n`;\n\nexport const hidden_xlrg = css`\n  @media screen and (min-width: 1024px) and (max-width: 1365px) {\n    .hidden-xlrg {\n      display: none;\n      visibility: none;\n    }\n  }\n`;\n\nexport const hidden_xxlrg = css`\n  @media screen and (min-width: 1366px) and (max-width: 1919px) {\n    .hidden-xxlrg {\n      display: none;\n      visibility: none;\n    }\n  }\n`;\n\nexport const hidden_xxxlrg = css`\n  @media screen and (min-width: 1920px) {\n    .hidden-xxxlrg {\n      display: none;\n      visibility: none;\n    }\n  }\n`;\n\nexport const hidden_all = css`\n  ${hidden}\n  ${hidden_sm}\n  ${hidden_med}\n  ${hidden_lrg}\n  ${hidden_xlrg}\n  ${hidden_xxlrg}\n  ${hidden_xxxlrg}\n`;\n","import { LitElement, css, html } from 'lit';\n\nimport { customElement, property, state, query } from 'lit/decorators.js';\n\nimport { hidden } from '../utils/css/hidden';\nimport { fastButtonCss } from '../utils/css/fast-elements';\nimport { FileInputDetails, Lazy } from '../utils/interfaces';\nimport { ifDefined } from 'lit/directives/if-defined.js';\n\nimport { FileInputElement } from '../utils/interfaces.components';\n\n@customElement('app-file-input')\nexport class FileInput extends LitElement implements FileInputElement {\n  @property({ type: String, attribute: true }) inputId = '';\n  @query('.file-input') fileInput: Lazy<HTMLInputElement>;\n\n  @state() buttonText = 'Choose File';\n\n  static get styles() {\n    return [\n      css`\n        [appearance='lightweight'] {\n          box-shadow: none;\n        }\n        :hover {\n          background-color: transparent;\n        }\n      `,\n      hidden,\n      fastButtonCss,\n    ];\n  }\n\n  get input(): any {\n    return this.fileInput;\n  }\n\n  get value(): any {\n    return this.fileInput?.value;\n  }\n\n  get files(): any {\n    return this.fileInput?.files || undefined;\n  }\n\n  constructor() {\n    super();\n  }\n\n  render() {\n    return html`\n      <div>\n        <fast-button\n          class=\"file-button\"\n          appearance=\"lightweight\"\n          @click=${this.clickModalInput}\n        >\n          ${this.buttonText}\n        </fast-button>\n        <input\n          id=\"${ifDefined(this.inputId)}\"\n          class=\"file-input hidden\"\n          type=\"file\"\n          aria-hidden=\"true\"\n          @change=${this.handleModalInputFileChosen}\n        />\n      </div>\n    `;\n  }\n\n  clickModalInput() {\n    this.fileInput?.click();\n  }\n\n  handleModalInputFileChosen() {\n    if (this.input) {\n      const changeEvent = new CustomEvent<FileInputDetails>('input-change', {\n        detail: {\n          input: this.input,\n        },\n        composed: true,\n        bubbles: true,\n      });\n\n      this.buttonText = this.input?.files?.item(0)?.name;\n      this.dispatchEvent(changeEvent);\n      this.requestUpdate();\n    }\n  }\n\n  clearInput() {\n    this.buttonText = 'Choose File';\n\n    if (this.fileInput) {\n      this.fileInput.files = null;\n    }\n  }\n}\n","import { LitElement, css, html, TemplateResult } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport { localeStrings } from '../../locales';\n\nimport '../components/app-header';\nimport '../components/app-file-input';\nimport { FileInputDetails, Lazy } from '../utils/interfaces';\n\nimport { recordProcessStep, AnalyticsBehavior } from '../utils/analytics';\nimport { env } from '../utils/environment';\n\ninterface PlatformInformation {\n  label: string;\n  value: string;\n}\n\ninterface ImageGeneratorServicePostResponse {\n  Message: string;\n  Uri: string;\n}\n\ntype ColorRadioValues = 'best guess' | 'transparent' | 'custom';\nconst loc = localeStrings.imageGenerator;\nconst platformsData: Array<PlatformInformation> = [\n  { label: loc.windows11, value: 'windows11' },\n  { label: loc.android, value: 'android' },\n  { label: loc.ios, value: 'ios' }\n];\nconst baseUrl = env.imageGeneratorUrl;\n\nfunction boolListHasChanged<T>(value: T, unknownValue: T): boolean {\n  if (!value || !unknownValue) {\n    return false;\n  }\n\n  return (value as Object).toString() === (unknownValue as Object).toString();\n}\n\n@customElement('image-generator')\nexport class ImageGenerator extends LitElement {\n  @state({ hasChanged: boolListHasChanged })\n  platformSelected: Array<boolean> = platformsData.map(() => true);\n\n  @state() files: Lazy<FileList>;\n\n  @state() padding = 0.3;\n\n  @state() colorOption: ColorRadioValues = 'transparent';\n\n  // hex color\n  @state() color: string = '#ffffff';\n\n  @state() selectAllState = false;\n\n  @state() generating = false;\n\n  @state() generateEnabled = false;\n\n  @state() error: Lazy<string>;\n\n  static get styles() {\n    return [\n      css`\n        :host {\n          --loader-size: 1.8em;\n          --sl-input-height-medium: 1.5rem;\n        }\n\n        h1 {\n          font-size: var(--xlarge-font-size);\n          line-height: 48px;\n          letter-spacing: -0.015em;\n          margin: 0;\n        }\n\n        h2 {\n          font-size: var(--large-font-size);\n        }\n\n        p {\n          font-size: var(--font-size);\n        }\n\n        small {\n          display: block;\n          font-size: 10px;\n        }\n\n\n        app-file-input:hover {\n          cursor: pointer;\n        }\n\n        sl-button {\n          height: 24px;\n          padding: 8px 0;\n        }\n\n        sl-button::part(base) {\n          margin: 0 16px;\n        }\n\n        #image-generator-card {\n          background: #ffffff;\n          padding: 16px;\n        }\n\n        #submit {\n          margin-top: 8px;\n        }\n\n        .background {\n          background-color: var(--primary-color);\n          color: var(--font-color);\n        }\n\n        .main {\n          padding: 32px;\n        }\n\n        input[type=\"number\"] {\n          width: 30%;\n          font-size: 22px;\n        }\n        small {\n          margin-top: 10px;\n        }\n        .color-radio, .platform-list {\n          display: flex;\n          flex-direction: column;\n          gap: 10px;\n        }\n\n        .color-radio >*, .platform-list >* {\n          display: flex;\n          align-items: center;\n          gap: 10px;\n        }\n\n        input[type=\"radio\"] {\n          border: 0px;\n          width: 22px;\n          height: 22px;\n          margin: 0;\n          accent-color: var(--primary-color);\n        }\n\n        input[type=\"radio\"]:hover {\n          cursor: pointer;\n        }\n\n        input[type=\"checkbox\"] {\n          border: 0px;\n          width: 22px;\n          height: 22px;\n          margin: 0;\n          accent-color: var(--primary-color);\n        }\n\n        input[type=\"checkbox\"]:hover {\n          cursor: pointer;\n        }\n      `,\n    ];\n  }\n\n  constructor() {\n    super();\n  }\n\n  firstUpdated() {\n    recordProcessStep('image-generation', `page-loaded`, AnalyticsBehavior.StartProcess);\n  }\n\n  render() {\n    return html`\n      <div>\n        <app-header></app-header>\n        <main id=\"main\" class=\"main background\">\n          <div id=\"image-generator-card\">\n            <h1>${loc.image_generator}</h1>\n            <p>${loc.image_generator_text}</p>\n            <form id=\"imageFileInputForm\" enctype=\"multipart/form-data\" class=\"form\">\n              <section class=\"form-left\">\n                <div class=\"image-section\">\n                  <h2>${loc.input_image}</h2>\n                  <p>${loc.input_image_help}</p>\n                  <app-file-input @input-change=${this.handleInputChange}></app-file-input>\n                </div>\n                <div class=\"padding-section\">\n                  <label for=\"padding\"><h2>${loc.padding}</h2></label>\n                  <input \n                    id=\"padding\"\n                    name=\"padding\" \n                    type=\"number\" \n                    max=\"1\" \n                    min=\"0\" \n                    step=\"0.1\" \n                    value=${this.padding}\n                    @change=${this.handlePaddingChange} required></input>\n                  <small>${loc.padding_text}</small>\n                </div>\n                <div class=\"color-section\">\n                  <h2>${loc.background_color}</h2>\n                  <div class=\"color-radio\">\n                    <div class=\"radio-div\">\n                      <input type=\"radio\" id=\"best-guess-radio\" name=\"colorOption\" value=\"best guess\" @change=${this.handleBackgroundRadioChange} ?checked=${this.colorOption === \"best guess\"} />\n                      <label for=\"best-guess-radio\">${loc.best_guess}</label>\n                    </div>\n\n                    <div class=\"radio-div\">\n                      <input type=\"radio\" id=\"transparent-radio\" name=\"colorOption\" value=\"transparent\" @change=${this.handleBackgroundRadioChange} ?checked=${this.colorOption === \"transparent\"} />\n                      <label for=\"transparent-radio\">${loc.transparent}</label>\n                    </div>\n\n                    <div class=\"radio-div\">\n                      <input type=\"radio\" id=\"custom-radio\" name=\"colorOption\" value=\"custom\" @change=${this.handleBackgroundRadioChange} ?checked=${this.colorOption === \"custom\"} />\n                      <label for=\"custom-radio\">${loc.custom_color}</label>\n                    </div>\n                  </div>\n                  ${this.renderColorPicker()}\n                </div>\n              </section>\n              <section class=\"form-right platforms-section\">\n                <h4>${loc.platforms}</h4>\n                <p>${loc.platforms_text}</p>\n                <div role=\"group\" class=\"platform-list\">\n                  ${this.renderPlatformList()}\n                </div>\n              </section>\n              <section id=\"submit\" class=\"form-bottom\">\n                <sl-button id=\"generateButton\" class=\"primary\" ?disabled=${!this.generateEnabled || this.generating}\n                  @click=${this.generateZip}\n                  ?loading=${this.generating}>\n                  ${localeStrings.button.generate}\n\n                </sl-button>\n\n                ${this.renderError()}\n              </section>\n            </form>\n          </div>\n        </main>\n      </div>\n    `;\n  }\n\n  renderPlatformList() {\n    return platformsData.map(\n      (platform, i) => html`\n      <div class=\"checkbox-div\">\n        <input \n          type=\"checkbox\"\n          name=\"platform\" \n          id=\"${`${platform.value}-checkbox`}\"\n          value=\"${platform.value}\" \n          ?checked=${this.platformSelected[i]}\n          @change=${this.handleCheckbox} \n          data-index=${i} />\n        <label for=\"${platform.value}-checkbox\">${platform.label}</label>\n      </div>\n      `\n    );\n  }\n\n  renderColorPicker() {\n    if (this.colorOption === 'custom') {\n      return html`<div class=\"custom-color-block\">\n  <label for=\"theme-custom-color\">${localeStrings.values.custom}</label>\n  <input type=\"color\" id=\"theme-custom-color\" name=\"color\" .value=${this.color}\n    @change=${this.handleThemeColorInputChange} />\n</div>`;\n    }\n\n    return undefined;\n  }\n\n  renderError(): TemplateResult {\n    if (this.error) {\n      return html`<p style=\"font-size: 16px; color: red;\">${this.error}</p>`;\n    }\n\n    return html``;\n  }\n\n  handleInputChange(event: CustomEvent<FileInputDetails>) {\n    recordProcessStep('image-generation', 'choose-file-clicked', AnalyticsBehavior.ProcessCheckpoint);\n\n    const input = event.detail.input;\n    if (input.files) {\n      this.files = input.files;\n    }\n    this.checkGenerateEnabled();\n  }\n\n  handlePaddingChange(event: Event) {\n    const input = <HTMLInputElement>event.target;\n    let updatedValue = input.value;\n    this.padding = parseFloat(updatedValue);\n  }\n\n  handleCheckbox(event: Event) {\n    const input = event.target as HTMLInputElement;\n    const index = input.dataset['index'];\n    this.platformSelected[index as any] = input.checked;\n\n    this.checkGenerateEnabled();\n  }\n\n  handleBackgroundRadioChange(event: CustomEvent) {\n    const value: ColorRadioValues = (<HTMLInputElement>event.target)\n      .value as ColorRadioValues;\n    this.colorOption = value;\n    this.checkGenerateEnabled();\n  }\n\n  handleThemeColorInputChange(event: Event) {\n    const input = event.target as HTMLInputElement;\n    this.color = input.value;\n    this.checkGenerateEnabled();\n  }\n\n  async generateZip() {\n    recordProcessStep('image-generation', 'generate-zip-clicked', AnalyticsBehavior.CompleteProcess);\n    const file = this.files ? this.files[0] : null;\n    if (!file) {\n      const errorMessage = 'No file available to generate zip';\n      console.error(errorMessage);\n      this.error = errorMessage;\n      return;\n    }\n\n    try {\n      this.generateEnabled = false;\n      this.generating = true;\n\n      const form = new FormData();\n      const colorValue =\n        this.colorOption === 'custom' ? this.color : // custom? Then send in the chosen color\n        this.colorOption === 'best guess' ? '' : // best guess? Then send in an empty string, which the API interprets as best guess\n          'transparent'; // otherwise, it must be transparent\n\n      form.append('fileName', file as Blob);\n      form.append('padding', String(this.padding));\n      form.append('color', colorValue);\n\n      platformsData\n        .filter((_, index) => this.platformSelected[index])\n        .forEach(data => form.append('platform', data.value));\n\n      const res = await fetch(`${baseUrl}/api/image`, {\n        method: 'POST',\n        body: form,\n      });\n\n      const postRes =\n        (await res.json()) as unknown as ImageGeneratorServicePostResponse;\n\n      if (postRes.Message) {\n        throw new Error('Error from service: ' + postRes.Message);\n      }\n\n      this.downloadZip(`${baseUrl}${postRes.Uri}`);\n    } catch (e) {\n      console.error(e);\n      this.error = (e as Error).message;\n    } finally {\n      this.generating = false;\n      this.generateEnabled = true;\n    }\n  }\n\n  downloadZip(zipUrl: string) {\n    const hyperlink = document.createElement(\"a\");\n    hyperlink.href = zipUrl;\n    hyperlink.download = \"\";\n    hyperlink.click();\n  }\n\n  checkGenerateEnabled() {\n    this.generateEnabled =\n      this.files !== undefined &&\n      this.platformSelected.reduce((a, b) => a || b);\n    return this.generateEnabled;\n  }\n}\n"],"names":["hidden","css","hidden_sm","hidden_med","hidden_lrg","hidden_xlrg","hidden_xxlrg","hidden_xxxlrg","FileInput","LitElement","fastButtonCss","_a","html","ifDefined","changeEvent","_c","_b","__decorateClass","property","query","state","customElement","loc","localeStrings","platformsData","baseUrl","env","boolListHasChanged","value","unknownValue","ImageGenerator","recordProcessStep","AnalyticsBehavior","platform","i","event","input","updatedValue","index","file","errorMessage","form","colorValue","_","data","postRes","zipUrl","hyperlink","a","b"],"mappings":"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"}