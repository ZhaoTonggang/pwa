{"version":3,"file":"app-report.api.39a3449e.js","sources":["../../src/script/pages/app-report.api.ts"],"sourcesContent":["import { env } from '../utils/environment';\nimport { getHeaders } from '../utils/platformTrackingHeaders';\n\nexport type ReportAudit = {\n\taudits: {\n\t\tisOnHttps: { score: boolean },\n\t\tnoMixedContent: { score: boolean },\n\t\tinstallableManifest: {\n\t\t  score: boolean,\n\t\t  details: { url?: string }\n\t\t},\n\t\tserviceWorker: {\n\t\t  score: boolean,\n\t\t  details: {\n\t\t\turl?: string,\n\t\t\tscope?: string,\n\t\t\tfeatures?: { detectedBackgroundSync: boolean,\n\t\t\t\tdetectedPeriodicBackgroundSync: boolean,\n\t\t\t\tdetectedPushRegistration: boolean,\n\t\t\t\tdetectedSignsOfLogic: boolean,\n\t\t\t\traw?: string[] }\n\t\t\t}\n\t\t},\n\t\tofflineSupport: { score: boolean },\n\t\tappleTouchIcon: { score: boolean },\n\t\tmaskableIcon: { score: boolean },\n\t\tsplashScreen: { score: boolean },\n\t\tthemedOmnibox: { score: boolean },\n\t\tviewport: { score: boolean }\n\t},\n\tartifacts: {\n\t\twebAppManifest: {\n\t\t\traw?: string,\n\t\t\turl?: string,\n\t\t\tvalue?: unknown,\n\t\t\tjson?: unknown\n\t\t},\n\t\tserviceWorker: {\n\t\t\tregistrations: unknown[],\n\t\t\tversions: unknown[],\n\t\t\traw?: string\n\t\t},\n\t\turl: string,\n\t\tlinkElements: unknown[],\n\t\tmetaElements: unknown[]\n\t}\n}\nexport type FindWebManifestResult = {\n\tcontent: {\n\t\turl: string,\n\t\traw: string,\n\t\tjson: unknown\n\t}\n}\nexport type FindServiceWorkerResult = {\n\tcontent: {\n\t\turl: string,\n\t\traw: string\n\t}\n}\nexport type AuditServiceWorkerResult = {\n\tcontent: {\n\t\tscore: boolean,\n\t\tdetails:{\n\t\t\turl: string,\n\t\t\tfeatures: ReportAudit['audits']['serviceWorker']['details']['features']\n\t\t}\n\t}\n}\n\nexport async function Report(\n\turl: string\n  ): Promise<ReportAudit> {\n\tconst referrer = sessionStorage.getItem('ref');\n\tconst fetchReport = await fetch(\n\t\t`${\n\t\t\tenv.api\n\t\t}/Report?site=${encodeURIComponent(url)}&desktop=true${referrer ? '&ref=' + encodeURIComponent(referrer) : ''}`,\n\t\t{\n\t\t\theaders: new Headers(getHeaders())\n\t\t}\n\t);\n\n\tif (!fetchReport?.ok) {\n\t  console.warn(\n\t\t'Unable to audit due to HTTP error',\n\t\tfetchReport.status,\n\t\tfetchReport.statusText\n\t  );\n\t  throw new Error(\n\t\t`Report audit failed due to HTTP error ${fetchReport.status} ${fetchReport.statusText}`\n\t  );\n\t}\n\n\tconst jsonResult: { data: ReportAudit } = await (fetchReport as Response)?.json?.();\n\tconsole.info('Report audit succeeded', jsonResult?.data);\n\treturn jsonResult?.data;\n}\n\nexport async function FindWebManifest(\n\tsite: string\n  ): Promise<FindWebManifestResult> {\n\tconst fetchReport = await fetch(\n\t  `${\n\t\tenv.api\n\t  }/FindWebManifest?site=${encodeURIComponent(site)}`\n\t);\n\tif (!fetchReport.ok) {\n\t  console.warn(\n\t\t'Unable to FindWebManifest due to HTTP error',\n\t\tfetchReport.status,\n\t\tfetchReport.statusText\n\t  );\n\t  throw new Error(\n\t\t`FindWebManifest failed due to HTTP error ${fetchReport.status} ${fetchReport.statusText}`\n\t  );\n\t}\n\n\tconst jsonResult: FindWebManifestResult = await fetchReport.json();\n\tconsole.info('FindWebManifest succeeded', jsonResult?.content);\n\treturn jsonResult;\n}\n\nexport async function FindServiceWorker(\n\tsite: string\n  ): Promise<FindServiceWorkerResult> {\n\tconst fetchReport = await fetch(\n\t  `${\n\t\tenv.api\n\t  }/FindServiceWorker?site=${encodeURIComponent(site)}`\n\t);\n\tif (!fetchReport.ok) {\n\t  console.warn(\n\t\t'Unable to FindServiceWorker due to HTTP error',\n\t\tfetchReport.status,\n\t\tfetchReport.statusText\n\t  );\n\t  throw new Error(\n\t\t`FindServiceWorker failed due to HTTP error ${fetchReport.status} ${fetchReport.statusText}`\n\t  );\n\t}\n\n\tconst jsonResult: FindServiceWorkerResult = await fetchReport.json();\n\tconsole.info('FindServiceWorker succeeded', jsonResult?.content);\n\treturn jsonResult;\n}\n\nexport async function AuditServiceWorker(\n\turl: string\n  ): Promise<AuditServiceWorkerResult> {\n\tconst fetchReport = await fetch(\n\t  `${\n\t\tenv.api\n\t  }/AuditServiceWorker?url=${encodeURIComponent(url)}`\n\t);\n\tif (!fetchReport.ok) {\n\t  console.warn(\n\t\t'Unable to AuditServiceWorker due to HTTP error',\n\t\tfetchReport.status,\n\t\tfetchReport.statusText\n\t  );\n\t  throw new Error(\n\t\t`AuditServiceWorker failed due to HTTP error ${fetchReport.status} ${fetchReport.statusText}`\n\t  );\n\t}\n\n\tconst jsonResult: AuditServiceWorkerResult = await fetchReport.json();\n\tconsole.info('AuditServiceWorker succeeded', jsonResult?.content);\n\treturn jsonResult;\n}"],"names":["Report","url","referrer","fetchReport","env","getHeaders","jsonResult","_a","FindWebManifest","site","FindServiceWorker","AuditServiceWorker"],"mappings":"+CAsEA,eAAsBA,EACrBC,EACyB,OACnB,MAAAC,EAAW,eAAe,QAAQ,KAAK,EACvCC,EAAc,MAAM,MACzB,GACCC,EAAI,mBACW,mBAAmBH,CAAG,iBAAiBC,EAAW,QAAU,mBAAmBA,CAAQ,EAAI,KAC3G,CACC,QAAS,IAAI,QAAQG,GAAY,CAClC,CAAA,EAGG,GAAA,EAACF,GAAA,MAAAA,EAAa,IACR,cAAA,KACT,oCACAA,EAAY,OACZA,EAAY,UAAA,EAEL,IAAI,MACX,yCAAyCA,EAAY,UAAUA,EAAY,YAAA,EAItE,MAAAG,EAAoC,OAAOC,EAAAJ,GAAA,YAAAA,EAA0B,OAA1B,YAAAI,EAAA,KAAAJ,IACzC,eAAA,KAAK,yBAA0BG,GAAA,YAAAA,EAAY,IAAI,EAChDA,GAAA,YAAAA,EAAY,IACpB,CAEA,eAAsBE,EACrBC,EACmC,CACnC,MAAMN,EAAc,MAAM,MACxB,GACDC,EAAI,4BACsB,mBAAmBK,CAAI,GAAA,EAE9C,GAAA,CAACN,EAAY,GACP,cAAA,KACT,8CACAA,EAAY,OACZA,EAAY,UAAA,EAEL,IAAI,MACX,4CAA4CA,EAAY,UAAUA,EAAY,YAAA,EAIzE,MAAAG,EAAoC,MAAMH,EAAY,OACpD,eAAA,KAAK,4BAA6BG,GAAA,YAAAA,EAAY,OAAO,EACtDA,CACR,CAEA,eAAsBI,EACrBD,EACqC,CACrC,MAAMN,EAAc,MAAM,MACxB,GACDC,EAAI,8BACwB,mBAAmBK,CAAI,GAAA,EAEhD,GAAA,CAACN,EAAY,GACP,cAAA,KACT,gDACAA,EAAY,OACZA,EAAY,UAAA,EAEL,IAAI,MACX,8CAA8CA,EAAY,UAAUA,EAAY,YAAA,EAI3E,MAAAG,EAAsC,MAAMH,EAAY,OACtD,eAAA,KAAK,8BAA+BG,GAAA,YAAAA,EAAY,OAAO,EACxDA,CACR,CAEA,eAAsBK,EACrBV,EACsC,CACtC,MAAME,EAAc,MAAM,MACxB,GACDC,EAAI,8BACwB,mBAAmBH,CAAG,GAAA,EAE/C,GAAA,CAACE,EAAY,GACP,cAAA,KACT,iDACAA,EAAY,OACZA,EAAY,UAAA,EAEL,IAAI,MACX,+CAA+CA,EAAY,UAAUA,EAAY,YAAA,EAI5E,MAAAG,EAAuC,MAAMH,EAAY,OACvD,eAAA,KAAK,+BAAgCG,GAAA,YAAAA,EAAY,OAAO,EACzDA,CACR"}